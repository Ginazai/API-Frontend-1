{"ast":null,"code":"export function parseDate(dateString) {\n  try {\n    if (!dateString) return '';\n    if (typeof dateString !== 'string') throw new Error('Invalid date string');\n    const date = new Date(dateString);\n    return date.toLocaleDateString('es-ES', {\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  } catch (error) {\n    console.error('Error parsing date:', error);\n    return '';\n  }\n}","map":{"version":3,"names":["parseDate","dateString","Error","date","Date","toLocaleDateString","year","month","day","hour","minute","hour12","error","console"],"sources":["D:/Users/FakeR/eclipse-workspace/spring-workspaces/RESTAPI/API/ReactFrontend/inventory/src/utils/parseDate.js"],"sourcesContent":["export function parseDate(dateString) {\r\n\ttry {\n        if (!dateString) return '';\n        if (typeof dateString !== 'string') throw new Error('Invalid date string');\r\n\t\tconst date = new Date(dateString);\r\n\t\treturn date.toLocaleDateString('es-ES', {\r\n\t\t  year: 'numeric',\r\n\t\t  month: 'long',\r\n\t\t  day: '2-digit',\r\n\t\t  hour: '2-digit',\r\n\t\t  minute: '2-digit',\r\n\t\t  hour12: true\r\n\t\t});\n    } catch (error) {\r\n\t\tconsole.error('Error parsing date:', error);\n        return '';\n    }\r\n}"],"mappings":"AAAA,OAAO,SAASA,SAASA,CAACC,UAAU,EAAE;EACrC,IAAI;IACG,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAC1B,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IAChF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,UAAU,CAAC;IACjC,OAAOE,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;EACA,CAAC,CAAC,OAAOC,KAAK,EAAE;IAClBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IACrC,OAAO,EAAE;EACb;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}