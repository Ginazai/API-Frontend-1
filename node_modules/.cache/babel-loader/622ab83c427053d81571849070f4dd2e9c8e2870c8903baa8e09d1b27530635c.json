{"ast":null,"code":"export function parseDateLong(dateString){try{if(!dateString)return'';if(typeof dateString!=='string')throw new Error('Invalid date string');const date=new Date(dateString);return date.toLocaleDateString('es-ES',{year:'numeric',month:'long',day:'2-digit',hour:'2-digit',minute:'2-digit',hour12:true});}catch(error){console.error('Error parsing date:',error);return'';}}export function parseDateShort(dateString){try{if(!dateString)return'';if(typeof dateString!=='string')throw new Error('Invalid date string');const date=new Date(dateString);return date.toLocaleDateString('es-ES',{year:'numeric',month:'long',day:'2-digit'});}catch(error){console.error('Error parsing date:',error);return'';}}","map":{"version":3,"names":["parseDateLong","dateString","Error","date","Date","toLocaleDateString","year","month","day","hour","minute","hour12","error","console","parseDateShort"],"sources":["D:/Users/FakeR/eclipse-workspace/spring-workspaces/RESTAPI/API/ReactFrontend/inventory/src/utils/parseDate.js"],"sourcesContent":["export function parseDateLong(dateString) {\r\n\ttry {\n        if (!dateString) return '';\n        if (typeof dateString !== 'string') throw new Error('Invalid date string');\r\n\t\tconst date = new Date(dateString);\r\n\t\treturn date.toLocaleDateString('es-ES', {\r\n\t\t  year: 'numeric',\r\n\t\t  month: 'long',\r\n\t\t  day: '2-digit',\r\n\t\t  hour: '2-digit',\r\n\t\t  minute: '2-digit',\r\n\t\t  hour12: true\r\n\t\t});\n    } catch (error) {\r\n\t\tconsole.error('Error parsing date:', error);\n        return '';\n    }\r\n}\r\nexport function parseDateShort(dateString) {\r\n\ttry {\r\n        if (!dateString) return '';\r\n        if (typeof dateString !== 'string') throw new Error('Invalid date string');\r\n\t\tconst date = new Date(dateString);\r\n\t\treturn date.toLocaleDateString('es-ES', {\r\n\t\t  year: 'numeric',\r\n\t\t  month: 'long',\r\n\t\t  day: '2-digit'\r\n\t\t});\r\n    } catch (error) {\r\n\t\tconsole.error('Error parsing date:', error);\r\n        return '';\r\n    }\r\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,aAAaA,CAACC,UAAU,CAAE,CACzC,GAAI,CACG,GAAI,CAACA,UAAU,CAAE,MAAO,EAAE,CAC1B,GAAI,MAAO,CAAAA,UAAU,GAAK,QAAQ,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,qBAAqB,CAAC,CAChF,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACH,UAAU,CAAC,CACjC,MAAO,CAAAE,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CAAC,CACA,CAAE,MAAOC,KAAK,CAAE,CAClBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CACrC,MAAO,EAAE,CACb,CACJ,CACA,MAAO,SAAS,CAAAE,cAAcA,CAACb,UAAU,CAAE,CAC1C,GAAI,CACG,GAAI,CAACA,UAAU,CAAE,MAAO,EAAE,CAC1B,GAAI,MAAO,CAAAA,UAAU,GAAK,QAAQ,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,qBAAqB,CAAC,CAChF,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACH,UAAU,CAAC,CACjC,MAAO,CAAAE,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SACP,CAAC,CAAC,CACA,CAAE,MAAOI,KAAK,CAAE,CAClBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CACrC,MAAO,EAAE,CACb,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}