{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\FakeR\\\\eclipse-workspace\\\\spring-workspaces\\\\RESTAPI\\\\API\\\\ReactFrontend\\\\inventory\\\\src\\\\components\\\\categories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getCategorias } from '../services/api';\nimport { useEffect } from 'react';\nimport { Card, Col, Container, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Categories() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await getCategorias();\n        setCategories(res.data);\n        console.log('Categorías obtenidas:', res.data);\n      } catch (err) {\n        setError('Error al obtener categorías');\n        console.error(err);\n      }\n    };\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Nombre: \", category.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [\"Activa: \", category.active === true ? \"Si\" : \"No\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n_s(Categories, \"WXy/Kxa4SjpUlRaBfu1hZzB8pxA=\");\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","getCategorias","useEffect","Card","Col","Container","Row","jsxDEV","_jsxDEV","Categories","_s","categories","setCategories","error","setError","fetchCategories","res","data","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","xs","sm","md","lg","Header","name","Body","active","id","_c","$RefreshReg$"],"sources":["D:/Users/FakeR/eclipse-workspace/spring-workspaces/RESTAPI/API/ReactFrontend/inventory/src/components/categories.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getCategorias } from '../services/api';\r\nimport { useEffect } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\t\r\nexport default function Categories() { \r\n    const [categories, setCategories] = useState([]);\r\n\tconst [error, setError] = useState('');\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst fetchCategories = async () => {\n            try {\n                const res = await getCategorias();\n                setCategories(res.data);\r\n\t\t\t\tconsole.log('Categorías obtenidas:', res.data);\n            } catch (err) {\n                setError('Error al obtener categorías');\n                console.error(err);\n            }\n        };\n        fetchCategories();\r\n\t}, []);\r\n\treturn(\r\n\t\t<Container className=\"my-4\">\r\n\t\t    <Row>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n                {categories.map(category => (\n                    <Col key={category.id} xs={12} sm={6} md={4} lg={3} className=\"mb-3\">\n                        <Card className=\"shadow-sm\">\n                            <Card.Header>{category.name}</Card.Header>\n                            <Card.Body>\n                                <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item\">Nombre: {category.name}</li>\n                                    <li className=\"list-group-item\">Activa: {category.active === true ? \"Si\" : \"No\"}</li>\n                                </ul>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\r\n\t\t</Container>\r\n\t);\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCE,SAAS,CAAC,MAAM;IACf,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMf,aAAa,CAAC,CAAC;QACjCW,aAAa,CAACI,GAAG,CAACC,IAAI,CAAC;QACnCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAACC,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOG,GAAG,EAAE;QACVN,QAAQ,CAAC,6BAA6B,CAAC;QACvCI,OAAO,CAACL,KAAK,CAACO,GAAG,CAAC;MACtB;IACJ,CAAC;IACDL,eAAe,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACN,oBACCP,OAAA,CAACH,SAAS;IAACgB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACvBd,OAAA,CAACF,GAAG;MAAAgB,QAAA,GACOT,KAAK,iBAAIL,OAAA;QAAKa,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAET;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC1Df,UAAU,CAACgB,GAAG,CAACC,QAAQ,iBACpBpB,OAAA,CAACJ,GAAG;QAAmByB,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACX,SAAS,EAAC,MAAM;QAAAC,QAAA,eAChEd,OAAA,CAACL,IAAI;UAACkB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACvBd,OAAA,CAACL,IAAI,CAAC8B,MAAM;YAAAX,QAAA,EAAEM,QAAQ,CAACM;UAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eAC1ClB,OAAA,CAACL,IAAI,CAACgC,IAAI;YAAAb,QAAA,eACNd,OAAA;cAAIa,SAAS,EAAC,6BAA6B;cAAAC,QAAA,gBACvCd,OAAA;gBAAIa,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,GAAC,UAAQ,EAACM,QAAQ,CAACM,IAAI;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5DlB,OAAA;gBAAIa,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,GAAC,UAAQ,EAACM,QAAQ,CAACQ,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GATDE,QAAQ,CAACS,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUhB,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CArCuBD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}